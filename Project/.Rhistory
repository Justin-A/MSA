type = "none")     # 상수항, 추세항, 제거 모형 지정
prediction <- predict(res, n.ahead = 4, ci = 0.95) ; prediction
################################################################################################
res <- VAR(pw_total[, c(2,4,6)],  # prod, rw 변수 이용
lag.max = 4,       # 제한될 최대 시차 = 3
ic = "SC",         # Schwarz의 정보기준을 이용하여 자동으로 시차 결정
type = "none")     # 상수항, 추세항, 제거 모형 지정
prediction <- predict(res, n.ahead = 4, ci = 0.95) ; prediction
################################################################################################
res <- VAR(pw_total[, c(2,3,4,6)],  # prod, rw 변수 이용
lag.max = 4,       # 제한될 최대 시차 = 3
ic = "SC",         # Schwarz의 정보기준을 이용하여 자동으로 시차 결정
type = "none")     # 상수항, 추세항, 제거 모형 지정
prediction <- predict(res, n.ahead = 4, ci = 0.95) ; prediction
################################################################################################
res <- VAR(pw_total[, c(3,4,6)],  # prod, rw 변수 이용
lag.max = 4,       # 제한될 최대 시차 = 3
ic = "SC",         # Schwarz의 정보기준을 이용하여 자동으로 시차 결정
type = "none")     # 상수항, 추세항, 제거 모형 지정
prediction <- predict(res, n.ahead = 4, ci = 0.95) ; prediction
################################################################################################
res <- VAR(pw_total[, c(2,3,4,6)],  # prod, rw 변수 이용
lag.max = 4,       # 제한될 최대 시차 = 3
ic = "SC",         # Schwarz의 정보기준을 이용하여 자동으로 시차 결정
type = "none")     # 상수항, 추세항, 제거 모형 지정
prediction <- predict(res, n.ahead = 4, ci = 0.95) ; prediction
################################################################################################
res <- VAR(pw_total[, c(2,3,4,5,6)],  # prod, rw 변수 이용
lag.max = 4,       # 제한될 최대 시차 = 3
ic = "SC",         # Schwarz의 정보기준을 이용하여 자동으로 시차 결정
type = "none")     # 상수항, 추세항, 제거 모형 지정
prediction <- predict(res, n.ahead = 4, ci = 0.95) ; prediction
################################################################################################
res <- VAR(pw_total[, c(2,4,6)],  # prod, rw 변수 이용
lag.max = 4,       # 제한될 최대 시차 = 3
ic = "SC",         # Schwarz의 정보기준을 이용하여 자동으로 시차 결정
type = "none")     # 상수항, 추세항, 제거 모형 지정
prediction <- predict(res, n.ahead = 4, ci = 0.95) ; prediction
################################################################################################
res <- VAR(pw_total[, c(2,3,4,6)],  # prod, rw 변수 이용
lag.max = 4,       # 제한될 최대 시차 = 3
ic = "SC",         # Schwarz의 정보기준을 이용하여 자동으로 시차 결정
type = "none")     # 상수항, 추세항, 제거 모형 지정
prediction <- predict(res, n.ahead = 4, ci = 0.95) ; prediction
res <- VAR(jm_total[, c(2,3,4,6)],  # prod, rw 변수 이용
lag.max = 4,       # 제한될 최대 시차 = 3
ic = "SC",         # Schwarz의 정보기준을 이용하여 자동으로 시차 결정
type = "none")     # 상수항, 추세항, 제거 모형 지정
prediction <- predict(res, n.ahead = 4, ci = 0.95) ; prediction
################################################################################################
res <- VAR(pw_total[, c(2,6)],  # prod, rw 변수 이용
lag.max = 4,       # 제한될 최대 시차 = 3
ic = "SC",         # Schwarz의 정보기준을 이용하여 자동으로 시차 결정
type = "none")     # 상수항, 추세항, 제거 모형 지정
prediction <- predict(res, n.ahead = 4, ci = 0.95) ; prediction
res <- VAR(jm_total[, c(26)],  # prod, rw 변수 이용
lag.max = 4,       # 제한될 최대 시차 = 3
ic = "SC",         # Schwarz의 정보기준을 이용하여 자동으로 시차 결정
type = "none")     # 상수항, 추세항, 제거 모형 지정
res <- VAR(jm_total[, c(2,6)],  # prod, rw 변수 이용
lag.max = 4,       # 제한될 최대 시차 = 3
ic = "SC",         # Schwarz의 정보기준을 이용하여 자동으로 시차 결정
type = "none")     # 상수항, 추세항, 제거 모형 지정
prediction <- predict(res, n.ahead = 4, ci = 0.95) ; prediction
#######################################################################################
pw_total$support <- sa3$박원순
jm_total$support <- sa3$정몽준
#######################################################################################
# ARIMA
# https://github.com/haven-jeon/rdatamining/blob/master/time_series.Rmd
# https://woosa7.github.io/R-%EC%8B%9C%EA%B3%84%EC%97%B4%EB%B6%84%EC%84%9D-Time-Series-ARIMA/
ts_sa <- ts(sa2$박원순)
data <- ts_sa
################################################################################################
res <- VAR(pw_total[, c(2,6)],  # prod, rw 변수 이용
lag.max = 4,       # 제한될 최대 시차 = 3
ic = "SC",         # Schwarz의 정보기준을 이용하여 자동으로 시차 결정
type = "none")     # 상수항, 추세항, 제거 모형 지정
prediction <- predict(res, n.ahead = 4, ci = 0.95) ; prediction
res <- VAR(jm_total[, c(2,6)],  # prod, rw 변수 이용
lag.max = 4,       # 제한될 최대 시차 = 3
ic = "SC",         # Schwarz의 정보기준을 이용하여 자동으로 시차 결정
type = "none")     # 상수항, 추세항, 제거 모형 지정
prediction <- predict(res, n.ahead = 4, ci = 0.95) ; prediction
#######################################################################################
pw_total$support <- sa4$박원순
jm_total$support <- sa4$정몽준
#######################################################################################
# ARIMA
# https://github.com/haven-jeon/rdatamining/blob/master/time_series.Rmd
# https://woosa7.github.io/R-%EC%8B%9C%EA%B3%84%EC%97%B4%EB%B6%84%EC%84%9D-Time-Series-ARIMA/
ts_sa <- ts(sa2$박원순)
data <- ts_sa
################################################################################################
res <- VAR(pw_total[, c(2,6)],  # prod, rw 변수 이용
lag.max = 4,       # 제한될 최대 시차 = 3
ic = "SC",         # Schwarz의 정보기준을 이용하여 자동으로 시차 결정
type = "none")     # 상수항, 추세항, 제거 모형 지정
prediction <- predict(res, n.ahead = 4, ci = 0.95) ; prediction
################################################################################################
res <- VAR(pw_total[, c(2,6)],  # prod, rw 변수 이용
lag.max = 4,       # 제한될 최대 시차 = 3
ic = "SC",         # Schwarz의 정보기준을 이용하여 자동으로 시차 결정
type = "none")     # 상수항, 추세항, 제거 모형 지정
prediction <- predict(res, n.ahead = 4, ci = 0.95) ; prediction
res <- VAR(jm_total[, c(2,6)],  # prod, rw 변수 이용
lag.max = 4,       # 제한될 최대 시차 = 3
ic = "SC",         # Schwarz의 정보기준을 이용하여 자동으로 시차 결정
type = "none")     # 상수항, 추세항, 제거 모형 지정
prediction <- predict(res, n.ahead = 4, ci = 0.95) ; prediction
#######################################################################################
pw_total$support <- sa2$박원순
jm_total$support <- sa2$정몽준
#######################################################################################
# ARIMA
# https://github.com/haven-jeon/rdatamining/blob/master/time_series.Rmd
# https://woosa7.github.io/R-%EC%8B%9C%EA%B3%84%EC%97%B4%EB%B6%84%EC%84%9D-Time-Series-ARIMA/
ts_sa <- ts(sa4$박원순)
data <- ts_sa
#######################################################################################
pw_total$support <- sa2$박원순
jm_total$support <- sa2$정몽준
#######################################################################################
# ARIMA
# https://github.com/haven-jeon/rdatamining/blob/master/time_series.Rmd
# https://woosa7.github.io/R-%EC%8B%9C%EA%B3%84%EC%97%B4%EB%B6%84%EC%84%9D-Time-Series-ARIMA/
ts_sa <- ts(sa4$박원순)
data <- ts_sa
auto.arima(data)
model <- arima(data, order = c(0, 1, 1)) ; model
model_forecast <- forecast(model, h = 4) ; model_forecast
ts_sa <- ts(sa4$정몽준)
data <- ts_sa
auto.arima(data)
model <- arima(data, order = c(0, 0, 0)) ; model
model_forecast <- forecast(model, h = 4) ; model_forecast
################################################################################################
res <- VAR(pw_total[, c(2,6)],  # prod, rw 변수 이용
lag.max = 4,       # 제한될 최대 시차 = 3
ic = "SC",         # Schwarz의 정보기준을 이용하여 자동으로 시차 결정
type = "none")     # 상수항, 추세항, 제거 모형 지정
prediction <- predict(res, n.ahead = 4, ci = 0.95) ; prediction
res <- VAR(jm_total[, c(2,6)],  # prod, rw 변수 이용
lag.max = 4,       # 제한될 최대 시차 = 3
ic = "SC",         # Schwarz의 정보기준을 이용하여 자동으로 시차 결정
type = "none")     # 상수항, 추세항, 제거 모형 지정
prediction <- predict(res, n.ahead = 4, ci = 0.95) ; prediction
################################################################################################
res <- VAR(pw_total[, c(2,3,4,6)],  # prod, rw 변수 이용
lag.max = 4,       # 제한될 최대 시차 = 3
ic = "SC",         # Schwarz의 정보기준을 이용하여 자동으로 시차 결정
type = "none")     # 상수항, 추세항, 제거 모형 지정
prediction <- predict(res, n.ahead = 4, ci = 0.95) ; prediction
################################################################################################
res <- VAR(pw_total[, c(2,3,4,5,6)],  # prod, rw 변수 이용
lag.max = 4,       # 제한될 최대 시차 = 3
ic = "SC",         # Schwarz의 정보기준을 이용하여 자동으로 시차 결정
type = "none")     # 상수항, 추세항, 제거 모형 지정
prediction <- predict(res, n.ahead = 4, ci = 0.95) ; prediction
res <- VAR(jm_total[, c(2,3,4,6)],  # prod, rw 변수 이용
lag.max = 4,       # 제한될 최대 시차 = 3
ic = "SC",         # Schwarz의 정보기준을 이용하여 자동으로 시차 결정
type = "none")     # 상수항, 추세항, 제거 모형 지정
prediction <- predict(res, n.ahead = 4, ci = 0.95) ; prediction
#######################################################################################
pw_total$support <- sa2$박원순
jm_total$support <- sa2$정몽준
#######################################################################################
# ARIMA
# https://github.com/haven-jeon/rdatamining/blob/master/time_series.Rmd
# https://woosa7.github.io/R-%EC%8B%9C%EA%B3%84%EC%97%B4%EB%B6%84%EC%84%9D-Time-Series-ARIMA/
ts_sa <- ts(sa4$박원순)
data <- ts_sa
auto.arima(data)
model <- arima(data, order = c(0, 1, 1)) ; model
model_forecast <- forecast(model, h = 4) ; model_forecast
ts_sa <- ts(sa4$정몽준)
data <- ts_sa
auto.arima(data)
model <- arima(data, order = c(0, 0, 0)) ; model
model_forecast <- forecast(model, h = 4) ; model_forecast
################################################################################################
res <- VAR(pw_total[, c(2,3,4,6)],  # prod, rw 변수 이용
lag.max = 4,       # 제한될 최대 시차 = 3
ic = "SC",         # Schwarz의 정보기준을 이용하여 자동으로 시차 결정
type = "none")     # 상수항, 추세항, 제거 모형 지정
prediction <- predict(res, n.ahead = 4, ci = 0.95) ; prediction
res <- VAR(jm_total[, c(2,3,4,6)],  # prod, rw 변수 이용
lag.max = 4,       # 제한될 최대 시차 = 3
ic = "SC",         # Schwarz의 정보기준을 이용하여 자동으로 시차 결정
type = "none")     # 상수항, 추세항, 제거 모형 지정
prediction <- predict(res, n.ahead = 4, ci = 0.95) ; prediction
rm(list=ls())
Sys.setlocale(category = "LC_CTYPE", locale = "ko_KR.UTF-8")
setwd("~/Desktop/Justin/2018-1/Capstone/Data/Naver/")
pw <- read.csv("박원순_Naver_2018.csv") ;
ac <- read.csv("안철수_Naver_2018.csv") ;
km <- read.csv("김문수_Naver_2018.csv") ; km <- km[, c(1:5)]
# 박원순
data_pw <- pw[,c(-2)]
data_pw$sympathyCount <- as.numeric(data_pw$sympathyCount)
data_pw$antipathyCount <- as.numeric(data_pw$antipathyCount)
data_pw$rate <- data_pw$sympathyCount / (data_pw$sympathyCount + data_pw$antipathyCount)
# 안철수
data_ac <- ac[,c(-2)]
data_ac$sympathyCount <- as.numeric(data_ac$sympathyCount)
data_ac$antipathyCount <- as.numeric(data_ac$antipathyCount)
data_ac$rate <- data_ac$sympathyCount / (data_ac$sympathyCount + data_ac$antipathyCount)
# 김문수
data_km <- km[,c(-2)]
data_km$sympathyCount <- as.numeric(data_km$sympathyCount)
data_km$antipathyCount <- as.numeric(data_km$antipathyCount)
data_km$rate <- data_km$sympathyCount / (data_km$sympathyCount + data_km$antipathyCount)
# 박원순_날짜별 (pw_total)
data_pw$count <- 1
k1 <- aggregate(data_pw$count, by = list(data_pw$regTime), sum)
colnames(k1) <- c("regTime", "PW_Count")
k1$regTime <- as.Date(k1$regTime, format = "%d/%m/%Y")
pw_count <- k1[c(order(k1$regTime)),] ; pw_count <- pw_count[1:63,] ; pw_count
k2 <- aggregate(data_pw$sympathyCount, by = list(data_pw$regTime), sum)
colnames(k2) <- c("regTime", "Agree")
k2$regTime <- as.Date(k2$regTime, format = "%d/%m/%Y")
pw_agree <- k2[c(order(k2$regTime)), ] ; pw_agree <- pw_agree[1:63,] ; pw_agree
k3 <- aggregate(data_pw$sympathyCount, by = list(data_pw$regTime), mean)
colnames(k3) <- c("regTime", "Agree")
k3$regTime <- as.Date(k3$regTime, format = "%d/%m/%Y")
pw_agree_r <- k3[c(order(k3$regTime)), ] ; pw_agree_r <- pw_agree_r[1:63,] ; pw_agree_r
k3 <- aggregate(data_pw$sympathyCount, by = list(data_pw$regTime), var)
colnames(k3) <- c("regTime", "Agree")
k3$regTime <- as.Date(k3$regTime, format = "%d/%m/%Y")
pw_agree_var <- k3[c(order(k3$regTime)), ] ; pw_agree_var <- pw_agree_var[1:63,] ; pw_agree_var
k3 <- aggregate(data_pw$sympathyCount, by = list(data_pw$regTime), sd)
colnames(k3) <- c("regTime", "Agree")
k3$regTime <- as.Date(k3$regTime, format = "%d/%m/%Y")
pw_agree_sd <- k3[c(order(k3$regTime)), ] ; pw_agree_sd <- pw_agree_sd[1:63,] ; pw_agree_sd
k4 <- aggregate(data_pw$antipathyCount, by = list(data_pw$regTime), sum)
colnames(k4) <- c("regTime", "Disagree")
k4$regTime <- as.Date(k4$regTime, format = "%d/%m/%Y")
pw_disagree <- k4[c(order(k4$regTime)), ] ; pw_disagree <- pw_disagree[1:63,] ; pw_disagree
k5 <- aggregate(data_pw$antipathyCount, by = list(data_pw$regTime), mean)
colnames(k5) <- c("regTime", "Agree")
k5$regTime <- as.Date(k5$regTime, format = "%d/%m/%Y")
pw_disagree_r <- k5[c(order(k5$regTime)), ] ; pw_disagree_r <- pw_disagree_r[1:63,] ; pw_disagree_r
k5 <- aggregate(data_pw$antipathyCount, by = list(data_pw$regTime), var)
colnames(k5) <- c("regTime", "Agree")
k5$regTime <- as.Date(k5$regTime, format = "%d/%m/%Y")
pw_disagree_var <- k5[c(order(k5$regTime)), ] ; pw_disagree_var <- pw_disagree_var[1:63,] ; pw_disagree_var
k5 <- aggregate(data_pw$antipathyCount, by = list(data_pw$regTime), sd)
colnames(k5) <- c("regTime", "Agree")
k5$regTime <- as.Date(k5$regTime, format = "%d/%m/%Y")
pw_disagree_sd <- k5[c(order(k5$regTime)), ] ; pw_disagree_sd <- pw_disagree_sd[1:63,] ; pw_disagree_sd
k6 <- aggregate(data_pw$rate, by = list(data_pw$regTime), mean)
colnames(k6) <- c("regTime", "Rate")
k6$regTime <- as.Date(k6$regTime, format = "%d/%m/%Y")
pw_rate <- k6[c(order(k6$regTime)),] ; pw_rate <- pw_rate[1:63,] ; pw_rate
pw_total <- data.frame(pw_count, pw_agree$Agree, pw_agree_r$Agree, pw_agree_var$Agree, pw_agree_sd$Agree,
pw_disagree$Disagree, pw_disagree_r$Agree,pw_disagree_var$Agree, pw_disagree_sd$Agree, pw_rate$Rate)
colnames(pw_total) <- c("Date", "Count", "Agree_sum", "Agree_rate", "Agree_Var", "Agree_Sd", "Disagree_sum", "Disagree_rate", "Disagree_Var", "Disagree_Sd", "Rate")
# 안철수_날짜별 (pw_total)
data_ac$count <- 1
k1 <- aggregate(data_ac$count, by = list(data_ac$regTime), sum)
colnames(k1) <- c("regTime", "AC_Count")
k1$regTime <- as.Date(k1$regTime, format = "%d/%m/%Y")
ac_count <- k1[c(order(k1$regTime)),] ; ac_count <- ac_count[1:63,] ; ac_count
k2 <- aggregate(data_ac$sympathyCount, by = list(data_ac$regTime), sum)
colnames(k2) <- c("regTime", "Agree")
k2$regTime <- as.Date(k2$regTime, format = "%d/%m/%Y")
ac_agree <- k2[c(order(k2$regTime)), ] ; ac_agree <- ac_agree[1:63,] ; ac_agree
k3 <- aggregate(data_ac$sympathyCount, by = list(data_ac$regTime), mean)
colnames(k3) <- c("regTime", "Agree")
k3$regTime <- as.Date(k3$regTime, format = "%d/%m/%Y")
ac_agree_r <- k3[c(order(k3$regTime)), ] ; ac_agree_r <- ac_agree_r[1:63,] ; ac_agree_r
k3 <- aggregate(data_ac$sympathyCount, by = list(data_ac$regTime), var)
colnames(k3) <- c("regTime", "Agree")
k3$regTime <- as.Date(k3$regTime, format = "%d/%m/%Y")
ac_agree_var <- k3[c(order(k3$regTime)), ] ; ac_agree_var <- ac_agree_var[1:63,] ; ac_agree_var
k3 <- aggregate(data_ac$sympathyCount, by = list(data_ac$regTime), sd)
colnames(k3) <- c("regTime", "Agree")
k3$regTime <- as.Date(k3$regTime, format = "%d/%m/%Y")
ac_agree_sd <- k3[c(order(k3$regTime)), ] ; ac_agree_sd <- ac_agree_sd[1:63,] ; ac_agree_sd
k4 <- aggregate(data_ac$antipathyCount, by = list(data_ac$regTime), sum)
colnames(k4) <- c("regTime", "Disagree")
k4$regTime <- as.Date(k4$regTime, format = "%d/%m/%Y")
ac_disagree <- k4[c(order(k4$regTime)), ] ; ac_disagree <- ac_disagree[1:63,] ; ac_disagree
k5 <- aggregate(data_ac$antipathyCount, by = list(data_ac$regTime), mean)
colnames(k5) <- c("regTime", "Agree")
k5$regTime <- as.Date(k5$regTime, format = "%d/%m/%Y")
ac_disagree_r <- k5[c(order(k5$regTime)), ] ; ac_disagree_r <- ac_disagree_r[1:63,] ; ac_disagree_r
k5 <- aggregate(data_ac$antipathyCount, by = list(data_ac$regTime), var)
colnames(k5) <- c("regTime", "Agree")
k5$regTime <- as.Date(k5$regTime, format = "%d/%m/%Y")
ac_disagree_var <- k5[c(order(k5$regTime)), ] ; ac_disagree_var <- ac_disagree_var[1:63,] ; ac_disagree_var
k5 <- aggregate(data_ac$antipathyCount, by = list(data_ac$regTime), sd)
colnames(k5) <- c("regTime", "Agree")
k5$regTime <- as.Date(k5$regTime, format = "%d/%m/%Y")
ac_disagree_sd <- k5[c(order(k5$regTime)), ] ; ac_disagree_sd <- ac_disagree_sd[1:63,] ; ac_disagree_sd
k6 <- aggregate(data_ac$rate, by = list(data_ac$regTime), mean)
colnames(k6) <- c("regTime", "Rate")
k6$regTime <- as.Date(k6$regTime, format = "%d/%m/%Y")
ac_rate <- k6[c(order(k6$regTime)),] ; ac_rate <- ac_rate[1:63,] ; ac_rate
ac_total <- data.frame(ac_count, ac_agree$Agree, ac_agree_r$Agree, ac_agree_var$Agree, ac_agree_sd$Agree,
ac_disagree$Disagree, ac_disagree_r$Agree,ac_disagree_var$Agree, ac_disagree_sd$Agree, ac_rate$Rate)
colnames(ac_total) <- c("Date", "Count", "Agree_sum", "Agree_rate", "Agree_Var", "Agree_Sd", "Disagree_sum", "Disagree_rate", "Disagree_Var", "Disagree_Sd", "Rate")
# 김문수_날짜별 (pw_total)
data_km$count <- 1
k1 <- aggregate(data_km$count, by = list(data_km$regTime), sum)
colnames(k1) <- c("regTime", "KM_Count")
k1$regTime <- as.Date(k1$regTime, format = "%d/%m/%Y")
km_count <- k1[c(order(k1$regTime)),] ; km_count <- km_count[1:56,] ; km_count
k2 <- aggregate(data_km$sympathyCount, by = list(data_km$regTime), sum)
colnames(k2) <- c("regTime", "Agree")
k2$regTime <- as.Date(k2$regTime, format = "%d/%m/%Y")
km_agree <- k2[c(order(k2$regTime)), ] ; km_agree <- km_agree[1:56,] ; km_agree
k3 <- aggregate(data_km$sympathyCount, by = list(data_km$regTime), mean)
colnames(k3) <- c("regTime", "Agree")
k3$regTime <- as.Date(k3$regTime, format = "%d/%m/%Y")
km_agree_r <- k3[c(order(k3$regTime)), ] ; km_agree_r <- km_agree_r[1:56,] ; km_agree_r
k3 <- aggregate(data_km$sympathyCount, by = list(data_km$regTime), var)
colnames(k3) <- c("regTime", "Agree")
k3$regTime <- as.Date(k3$regTime, format = "%d/%m/%Y")
km_agree_var <- k3[c(order(k3$regTime)), ] ; km_agree_var <- km_agree_var[1:56,] ; km_agree_var
k3 <- aggregate(data_km$sympathyCount, by = list(data_km$regTime), sd)
colnames(k3) <- c("regTime", "Agree")
k3$regTime <- as.Date(k3$regTime, format = "%d/%m/%Y")
km_agree_sd <- k3[c(order(k3$regTime)), ] ; km_agree_sd <- km_agree_sd[1:56,] ; km_agree_sd
k4 <- aggregate(data_km$antipathyCount, by = list(data_km$regTime), sum)
colnames(k4) <- c("regTime", "Disagree")
k4$regTime <- as.Date(k4$regTime, format = "%d/%m/%Y")
km_disagree <- k4[c(order(k4$regTime)), ] ; km_disagree <- km_disagree[1:56,] ; km_disagree
k5 <- aggregate(data_km$antipathyCount, by = list(data_km$regTime), mean)
colnames(k5) <- c("regTime", "Agree")
k5$regTime <- as.Date(k5$regTime, format = "%d/%m/%Y")
km_disagree_r <- k5[c(order(k5$regTime)), ] ; km_disagree_r <- km_disagree_r[1:56,] ; km_disagree_r
k5 <- aggregate(data_km$antipathyCount, by = list(data_km$regTime), var)
colnames(k5) <- c("regTime", "Agree")
k5$regTime <- as.Date(k5$regTime, format = "%d/%m/%Y")
km_disagree_var <- k5[c(order(k5$regTime)), ] ; km_disagree_var <- km_disagree_var[1:56,] ; km_disagree_var
k5 <- aggregate(data_km$antipathyCount, by = list(data_km$regTime), sd)
colnames(k5) <- c("regTime", "Agree")
k5$regTime <- as.Date(k5$regTime, format = "%d/%m/%Y")
km_disagree_sd <- k5[c(order(k5$regTime)), ] ; km_disagree_sd <- km_disagree_sd[1:56,] ; km_disagree_sd
k6 <- aggregate(data_km$rate, by = list(data_km$regTime), mean)
colnames(k6) <- c("regTime", "Rate")
k6$regTime <- as.Date(k6$regTime, format = "%d/%m/%Y")
km_rate <- k6[c(order(k6$regTime)),] ; km_rate <- km_rate[1:56,] ; km_rate
km_total <- data.frame(km_count, km_agree$Agree, km_agree_r$Agree, km_agree_var$Agree, km_agree_sd$Agree,
km_disagree$Disagree, km_disagree_r$Agree,km_disagree_var$Agree, km_disagree_sd$Agree, km_rate$Rate)
colnames(km_total) <- c("Date", "Count", "Agree_sum", "Agree_rate", "Agree_Var", "Agree_Sd", "Disagree_sum", "Disagree_rate", "Disagree_Var", "Disagree_Sd", "Rate")
######################################################################################################################################################
pw_total$Rate_N <- 1-pw_total$Rate
ac_total$Rate_N <- 1-ac_total$Rate
km_total$Rate_N <- 1-km_total$Rate
library(zoo)
library(forecast)
library(vars)
######################################################################################################################################################
setwd("~/Desktop/Justin/2018-1/Capstone/Data/")
research <- read.csv("2018_Research.csv")
research <- research[,-5]
# Amelia
library(Amelia)
imp.a <- amelia(research, m = 5)
sa1 <- imp.a$imputations[[1]] ; sa1$무응답 <- 100 - (sa1$박원순+sa1$김문수+sa1$안철수) ; sa1 ; summary(sa1$무응답)
sa2 <- imp.a$imputations[[2]] ; sa2$무응답 <- 100 - (sa2$박원순+sa2$김문수+sa2$안철수) ; sa2 ; summary(sa2$무응답)
sa3 <- imp.a$imputations[[3]] ; sa3$무응답 <- 100 - (sa3$박원순+sa3$김문수+sa3$안철수) ; sa3 ; summary(sa3$무응답)
sa4 <- imp.a$imputations[[4]] ; sa4$무응답 <- 100 - (sa4$박원순+sa4$김문수+sa4$안철수) ; sa4 ; summary(sa4$무응답)
sa5 <- imp.a$imputations[[5]] ; sa5$무응답 <- 100 - (sa5$박원순+sa5$김문수+sa5$안철수) ; sa5 ; summary(sa5$무응답)
######################################################################################################################################################
sa1 <- sa1[4:66,]
sa3 <- sa3[4:66,]
sa4 <- sa4[4:66,]
support_p <- sa1$박원순
support_a <- sa1$안철수
support_k <- sa1$김문수
pw_total <- cbind(pw_total, support_p)
ac_total <- cbind(ac_total, support_a)
km_total <- cbind(km_total, support_k)
#
res <- VAR(pw_total[ ,c(2,3,4,5,6,7,8,9,10,13)],
lag.max = 4,
ic = "AIC",
type = "none")
prediction <- predict(res, n.ahead = 4, ci = 0.95) ; prediction
plot(prediction)
res <- VAR(ac_total[ ,c(2,3,5,7,9)],
lag.max = 4,
ic = "AIC",
type = "none")
prediction <- predict(res, n.ahead = 4, ci = 0.95) ; prediction
plot(prediction)
res <- VAR(km_total[ ,c(2,3,5,7,9)],
lag.max = 4,
ic = "AIC",
type = "none")
prediction <- predict(res, n.ahead = 4, ci = 0.95) ; prediction
plot(prediction)
#AIC, HQ, SC, FPE
#
# setwd("~/Downloads/")
# pw_s <- read.csv("박원순_support.csv")
# ac_s <- read.csv("안철수_support.csv")
# km_s <- read.csv("김문수_support.csv")
# head(pw_s)
# head(ac_s)
#
# res <- VAR(pw_s[, c(2,3,5,9)],
#            lag.max = 4,
#            ic = "AIC",
#            type = "none")
# prediction <- predict(res, n.ahead = 1, ci = 0.95) ; prediction
#
# res <- VAR(ac_s[, c(2,3,5,9)],
#            lag.max = 4,
#            ic = "AIC",
#            type = "none")
# prediction <- predict(res, n.ahead = 1, ci = 0.95) ; prediction
#
# res <- VAR(km_s[, c(2,3,5,9)],
#            lag.max = 4,
#            ic = "AIC",
#            type = "none")
# prediction <- predict(res, n.ahead = 1, ci = 0.95) ; prediction
#
res <- VAR(pw_total[ ,c(2,3,4,5,6,7,8,9,10)],
lag.max = 4,
ic = "AIC",
type = "none")
prediction <- predict(res, n.ahead = 4, ci = 0.95) ; prediction
plot(prediction)
#
res <- VAR(pw_total[ ,c(2,3,4,5,6,7,8,9,10)],
lag.max = 4,
ic = "AIC",
type = "none")
prediction <- predict(res, n.ahead = 4, ci = 0.95) ; prediction
head(pw_total)
tail(pw_total)
#
res <- VAR(pw_total[ ,c(2,3,4,5,6,7,8,9,10)],
lag.max = 1,
ic = "AIC",
type = "none")
prediction <- predict(res, n.ahead = 4, ci = 0.95) ; prediction
res <- VAR(ac_total[ ,c(2,3,4,5,6,7,8,9,10)],
lag.max = 1,
ic = "AIC",
type = "none")
prediction <- predict(res, n.ahead = 4, ci = 0.95) ; prediction
res <- VAR(pw_total[ ,c(2,3,4,5,6,7,8,9,10)],
lag.max = 4,
ic = "AIC",
type = "none")
prediction <- predict(res, n.ahead = 1, ci = 0.95) ; prediction
res <- VAR(ac_total[ ,c(2,3,4,5,6,7,8,9,10)],
lag.max = 4,
ic = "AIC",
type = "none")
prediction <- predict(res, n.ahead = 1, ci = 0.95) ; prediction
#
res <- VAR(pw_total[ ,c(2,3,4,5,6,7,8,9,10,13)],
lag.max = 4,
ic = "AIC",
type = "none")
prediction <- predict(res, n.ahead = 1, ci = 0.95) ; prediction
res <- VAR(ac_total[ ,c(2,3,4,5,6,7,8,9,10,13)],
lag.max = 4,
ic = "AIC",
type = "none")
prediction <- predict(res, n.ahead = 1, ci = 0.95) ; prediction
#
res <- VAR(pw_total[ ,c(2,3,4,5,6,7,8,9,10,13)],
lag.max = 4,
ic = "AIC",
type = "none")
#
res <- VAR(pw_total[ ,c(2,3,4,5,6,7,8,9,10,13)],
lag.max = 4,
ic = "AIC",
type = "none")
prediction <- predict(res, n.ahead = 1, ci = 0.95) ; prediction
#
res <- VAR(pw_total[ ,c(2,3,4,5,6,7,8,9,10,13)],
lag.max = 2,
ic = "AIC",
type = "none")
prediction <- predict(res, n.ahead = 1, ci = 0.95) ; prediction
res <- VAR(ac_total[ ,c(2,3,4,5,6,7,8,9,10,13)],
lag.max = 2,
ic = "AIC",
type = "none")
prediction <- predict(res, n.ahead = 1, ci = 0.95) ; prediction
setwd("~/Desktop/Justin/2018-1/Multivariate_Statistical_Analysis/Project/")
dir())
dir()
data <- read.csv("Project_Syllabus.docx")
trash <- read.csv("kowaine&kowaine.csv")
trash <- read.csv("kowaine&kowaine.csv")
Sys.setlocale(category = "LC_CTYPE", locale = "ko.KR_UTF-8")
Sys.setlocale(category = "LC_CTYPE", locale = "ko_KR,UTF-8")
Sys.setlocale(category = "LC_CTYPE", locale = "ko.KR-UTF-8")
Sys.setlocale(category = "LC_CTYPE", locale = "ko.KR_UTF-8")
Sys.setlocale(category = "LC_CTYPE", locale = "ko_KR.UTF-8")
setwd("~/Desktop/Justin/2018-1/Multivariate_Statistical_Analysis/Project/")
trash <- read.csv("kowaine&kowaine.csv")
trash <- read.csv("kowaine&kowaine.csv", stringsAsFactors = F)
trash <- read.csv("kowaine&kowaine.csv", stringsAsFactors = T)
trash <- read.csv("kowaine&kowaine.csv", stringsAsFactors = f)
trash <- read.csv("kowaine&kowaine.csv", stringsAsFactors = F)
head(trash)
str(trash)
diom(trash)
dim(trash)
